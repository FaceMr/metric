<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ywwl.metric.dal.dao.SyncJobInstMapper" >
  <resultMap id="BaseResultMap" type="com.ywwl.metric.dal.po.SyncJobInst" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="job_code" property="jobCode" jdbcType="VARCHAR" />
    <result column="job_type" property="jobType" jdbcType="VARCHAR" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="particle_size" property="particleSize" jdbcType="INTEGER" />
    <result column="circle_time" property="circleTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="sync_nbr" property="syncNbr" jdbcType="INTEGER" />
    <result column="run_date" property="runDate" jdbcType="TIMESTAMP" />
    <result column="complete_date" property="completeDate" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, job_code, job_type, job_name, particle_size, circle_time, state, total, sync_nbr,
    run_date, complete_date, remark, created_at, updated_at
  </sql>

  <select id="getExecutingInst" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from sync_job_inst
    where job_code = #{jobCode} and state = 1
  </select>
  <select id="getWaitingInst" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sync_job_inst
    where job_code = #{jobCode} and state = 0
  </select>
  <select id="existsSyncInst" resultType="int">
    select count(1) from sync_job_inst
    where job_code = #{jobCode} and circle_time = #{circleTime}
  </select>
  <insert id="insert" parameterType="com.ywwl.metric.dal.po.SyncJobInst" keyProperty="id" useGeneratedKeys="true" >
    insert into sync_job_inst (job_code, job_type, job_name, particle_size, circle_time, complete_date,
      state, total, sync_nbr, run_date, remark, created_at, updated_at)
    values (#{jobCode,jdbcType=VARCHAR}, #{jobType,jdbcType=VARCHAR},
      #{jobName,jdbcType=VARCHAR}, #{particleSize,jdbcType=INTEGER}, #{circleTime,jdbcType=TIMESTAMP}, now(),
      0, #{total,jdbcType=INTEGER}, 0, now(), #{remark,jdbcType=VARCHAR}, now(), now() )
  </insert>
  <update id="updateInst" parameterType="com.ywwl.metric.dal.po.SyncJobInst">
    update sync_job_inst
    <set>
      <if test="syncNbr > 0">
        sync_nbr = sync_nbr + #{syncNbr},
      </if>
      <if test="completeDate !=null and completeDate!=''">
        complete_date = #{completeDate},
      </if>
      <if test="remark !=null and remark!=''">
        remark = #{remark},
      </if>
      state = #{state},
      updated_at = now()
    </set>
    <where>
      job_code = #{jobCode} and circle_time = #{circleTime}
    </where>
  </update>

  <update id="recoveryAllSyncJobInst">
    update sync_job_inst set sync_nbr=0, remark='恢复执行', state=0, updated_at=now()
    where job_code = #{jobCode}
  </update>

  <delete id="delete">
    delete from sync_job_inst where job_code = #{jobCode}
  </delete>

  <update id="recoverySyncJobInst">
    update sync_job_inst set sync_nbr=0, remark='恢复执行', state=0, updated_at=now()
    where job_code = #{jobCode} and circle_time = #{circleTime}
  </update>
  <delete id="cleanDataByCircleTime">
    delete from ${dataTable} where circle_time = #{circleTime}
  </delete>
  <delete id="cleanDataTable">
    delete from ${dataTable}
  </delete>
  <select id="getSyncJobInst" resultMap="BaseResultMap" parameterType="com.ywwl.metric.dal.po.SyncJobInst" >
    select
    <include refid="Base_Column_List" />
    from sync_job_inst
    where 1=1
    <if test="jobCode!=null and jobCode!=''">
      and job_code = #{jobCode}
    </if>
    <if test="state>-10">
      and state = #{state}
    </if>
    <if test="createdAtStart!=null and createdAtStart!='' ">
      and circle_time >= #{createdAtStart}
    </if>
    <if test="createdAtEnd!=null and createdAtEnd!='' ">
      and circle_time &lt;= #{createdAtEnd}
    </if>
    order by circle_time desc
    limit #{start}, #{row}
  </select>
  <select id="getSyncJobInstCount" resultType="int" parameterType="com.ywwl.metric.dal.po.SyncJobInst" >
    select
    count(1)
    from sync_job_inst
    where 1=1
    <if test="jobCode!=null and jobCode!=''">
      and job_code = #{jobCode}
    </if>
    <if test="state>-10">
      and state = #{state}
    </if>
    <if test="createdAtStart!=null and createdAtStart!='' ">
      and circle_time >= #{createdAtStart}
    </if>
    <if test="createdAtEnd!=null and createdAtEnd!='' ">
      and circle_time &lt;= #{createdAtEnd}
    </if>
  </select>
</mapper>